@import "./colors.scss";

$themes: (
    light: (
        primaryColor: $lightPrimaryColor,
        secondaryColor: $lightSecondaryColor,
        backgroundColor: $lightBackgroundColor,
        textColor: $lightTextColor,
        accentColor: $lightAccentColor,
        shadowColor: $lightShadowColor
    ),
    dark: (
        primaryColor: $darkPrimaryColor,
        secondaryColor: $darkSecondaryColor,
        backgroundColor: $darkBackgroundColor,
        textColor: $darkTextColor,
        accentColor: $darkAccentColor,
        shadowColor: $darkShadowColor
    )
);

@mixin themify($themes) {
    @each $theme, $map in $themes {
        .theme-#{$theme} & {
            $theme-map: () !global;
            @each $key, $submap in $map {
                $value: map-get(map-get($themes, $theme), "#{$key}");
                $theme-map: map-merge(
                    $theme-map,
                    (
                        $key: $value,
                    )
                ) !global;
            }
            @content;
            $theme-map: null !global;
        }
    }
}
@function themed($key) {
    @return map-get($theme-map, $key);
}